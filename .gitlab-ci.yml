# docker image from https://github.com/DavidAnson/markdownlint-cli2
# vscode markdownlint https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint
# markdownlint-cli2: https://github.com/DavidAnson/markdownlint-cli2
# markdownlint rules: https://github.com/DavidAnson/markdownlint/blob/main/doc/Rules.md
# markdown-link-check: https://github.com/tcort/markdown-link-check
#
variables:
  GITLAB_REPO: git@g.a-bug.org:maix_sw/k230_docs.git
  GITHUB_REPO: git@github.com:kendryte/k230_docs.git
  GITEE_REPO: git@gitee.com:kendryte/k230_docs.git

default:
  interruptible: true

stages:
  - lint
  - build
  - sync
  - deploy

# MR merged
merge_sync:
  stage: sync
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "main"
  extends:
    - .setup_env
    - .sync_github_gitee

# tag push
tag_sync:
  stage: sync
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG =~ /^v\d+\.\d+.*$/
  extends:
    - .setup_env
    - .sync_github_gitee

# auto sync
schedule_sync:
  stage: sync
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  extends:
    - .setup_env
    - .sync_github_gitee

# manual sync
manual_sync:
  stage: sync
  rules:
    - if: '$CI_PIPELINE_SOURCE == "web"'
      when: always
  extends:
    - .setup_env
    - .sync_github_gitee

# new MR open
markdown-link-check:
  rules:
    # MR job
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  stage: lint
  timeout: 10m
  retry: 2
  tags:
    - k230
  image: ai.b-bug.org:5000/markdown:latest
  script:
    - uname -a
    - whoami
    - pwd
    - git fetch
    - FILELIST=$(git diff origin/dev --name-only -z --diff-filter=AM | grep "\\.md$")
    - echo $FILELIST
    - if [ -n "$FILELIST" ]; then echo $FILELIST | xargs markdown-link-check; fi

# new MR open
markdownlint:
  rules:
    # MR job
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  stage: lint
  timeout: 10m
  image: ai.b-bug.org:5000/markdown:latest
  tags:
    - k230
  script:
    - uname -a
    - whoami
    - pwd
    #- markdownlint-cli2 *.md **/*.md **/**/*.md **/**/**/*.md **/**/**/**/*.md
    #- find . -name \*.md -print0 | xargs -0 markdownlint-cli2
    - git fetch
    - FILELIST=$(git diff origin/dev --name-only -z --diff-filter=AM | grep "\\.md$")
    - echo $FILELIST
    - if [ -n "$FILELIST" ]; then echo $FILELIST | xargs markdownlint-cli2; fi

.setup_env:
  before_script:
    - echo '----------Build ENV Prepare----------'
    - echo 'Add SSH KEY for Multiple repo'
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PRIVATE_KEY" | ssh-add - > ~/.ssh/id_ed25519 || exit 1
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n    StrictHostKeyChecking no\n" > ~/.ssh/config'
    - echo $SHELL
    - echo "increate ssh timeout for github"
    - echo "    ServerAliveInterval 30" >> ~/.ssh/config
    - echo "    ServerAliveCountMax 60" >> ~/.ssh/config
    - echo "    TCPKeepAlive yes" >> ~/.ssh/config
    - cat ~/.ssh/config
    - whoami
    - uptime
    - pwd
    - uname -a
    - cat /etc/issue
    - echo $CI_PROJECT_DIR
    - echo $CI_PROJECT_NAME
    - echo '----------set git config ----------'
    - echo "${GITLAB_USER_EMAIL}"
    - echo "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global --add safe.directory $CI_PROJECT_DIR

.sync_github_gitee:
  timeout: 45m
  image: ai.b-bug.org:5000/k230_sdk:latest
  tags:
    - k230_sdk
  script:
    - cd $CI_PROJECT_DIR
    - ls -alht
    - rm -rf ./k230_docs/
    - git clone ${GITLAB_REPO} k230_docs || exit 1
    - cd k230_docs || exit 1
    - pwd
    - git checkout main
    - git branch -a
    - git status
    - echo '---pull latest main branch---'
    - git pull origin main
    - echo '---fetch all tags---'
    - git fetch --tags
    - git remote add github ${GITHUB_REPO}
    - git remote add gitee ${GITEE_REPO}
    - git remote -v
    - git branch -a
    - git status
    - echo "---push to gitee---"
    - git push --atomic --tags -u -f gitee main || git push --atomic --tags -u -f gitee main
    - echo "---push to github---"
    - git push --atomic --tags -u -f github main || git push --atomic --tags -u -f github main || git push --atomic --tags -u -f github main

build-web-docs:
  stage: build
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == "dev"
  image: ai.b-bug.org:5000/python:web-docs-v2
  tags:
    - k230
  environment:
    name: dev
    url: https://ai.b-bug.org/k230/docs/dev/
  script:
    - git fetch
    - git checkout dev
    - git pull
    - rm -rf _build
    - python3 preprocess.py
    - git config --global user.email "auto@canaan-creative.com"
    - git config --global user.name "GitLab CI"
    - git commit zh en -m remove_cover
    - make mhtml
    - git reset --hard HEAD^1
    - rm -rf /data1/k230/docs/*
    - cp -r _build/* /data1/k230/docs
    - ssh -p 52522 huangziyi@40.73.58.120 "rm -rf /data/webapp/k230"
    - scp -P 52522 -O -r _build huangziyi@40.73.58.120:/data/webapp/k230
